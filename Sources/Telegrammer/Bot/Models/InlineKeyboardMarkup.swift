// Telegrammer - Telegram Bot Swift SDK.
// This file is autogenerated by API/generate_wrappers.rb script.

/**
 This object represents an inline keyboard that appears right next to the message it belongs to.

 SeeAlso Telegram Bot API Reference:
 [InlineKeyboardMarkup](https://core.telegram.org/bots/api#inlinekeyboardmarkup)
 */
public final class InlineKeyboardMarkup: Codable {

    /// Custom keys for coding/decoding `InlineKeyboardMarkup` struct
    enum CodingKeys: String, CodingKey {
        case inlineKeyboard = "inline_keyboard"
    }

    /// Array of button rows, each represented by an Array of InlineKeyboardButton objects
    public var inlineKeyboard: [[InlineKeyboardButton]]


    public init (inlineKeyboard: [[InlineKeyboardButton]]) {
        self.inlineKeyboard = inlineKeyboard
    }
}

#if canImport(Multipart)
import Multipart

// MARK: - MultipartPartConvertible
extension InlineKeyboardMarkup: MultipartPartConvertible
{
    /// Encodes markup to data and sets up multi part
    public func convertToMultipartPart() throws -> MultipartPart {
        return try MultipartPart(data: JSONEncoder().encode(self))
    }
    
    /// Decodes InlineKeyboardMarkup from multipart
    public static func convertFromMultipartPart(_ part: MultipartPart) throws -> InlineKeyboardMarkup {
        do {
            // Sets up decoder and decodes the multi part data into InlineKeyboardMarkup
            let decoder = JSONDecoder()
            let markup = try decoder.decode(InlineKeyboardMarkup.self, from: part.data)
            return markup
        } catch {
            // in failure throws MultipartError
            throw MultipartError(identifier: "InlineKeyboardMarkup", reason: "failed to setup instance from json decoder - \(error)")
        }
    }
}
#endif
